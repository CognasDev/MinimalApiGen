@Samples.MusicCollection.Api_HostAddress = https://localhost:7104

### GET all albums - 200
GET {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums
Accept: application/json

### GET albums with pagination - 200
GET {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums?pageSize=2&pageNumber=1&orderBy=name
Accept: application/json

### GET albums with malformed pagination - 400
GET {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums?pageSize=2&pageNumber=1
Accept: application/json

### GET an album by Id that exists - 200
GET {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/1
Accept: application/json

### GET an album by Id that does not exist - 404
GET {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/0
Accept: application/json

### POST a new album - 201
POST {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/
Content-Type: application/json

{
    "artistId" : 1,
    "genreId" : 1,
    "labelId" : 1,
    "name" : "test",
    "releaseDate": "2024-06-22T13:45:21.378Z"
}

### PUT an existing album - 200
PUT {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/8
Content-Type: application/json

{
    "albumId" : 8,
    "artistId" : 1,
    "genreId" : 1,
    "labelId" : 1,
    "name" : "updated",
    "releaseDate": "2024-06-22T15:10:21.378Z"
}

### DELETE an album that exists
DELETE {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/8

### DELETE an album that does not exist
DELETE {{Samples.MusicCollection.Api_HostAddress}}/api/v1/albums/0